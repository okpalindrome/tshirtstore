openapi: "3.0.0"
info:
  title: T-shirt Store API
  description: Backend API for ecom site
  version: 1.1.0
  contact:
    email: okpalindrome@gmail.com
    url: "https://github.com/okpalindrome"

# servers:
#   - url: "https://localhost:4000/api/v1"
#     description: for local host - secure
#   - url: "http://localhost:4000/api/v1"
#     description: for local host - regular

servers:
  - url: "{protocol}://{url}/api/{version}"
    description: T-ShirtStore Swagger API 
    variables:
      version:
        enum:
          - v1
        default: v1
      url:
        enum:
          - localhost:4000
          - tshirtstore.palindromiq.com
        default: tshirtstore.palindromiq.com
      protocol:
        enum:
          - http
          - https
        default: https

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer

paths:  
  /signup:
    post:
      tags:
        - User Management
      summary: signup a new user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - photo
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                photo:
                  in: formData
                  description: The uploaded file data
                  type: file
                  format: binary
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      photo:
                        type: object
                        properties:
                          id:
                            type: string
                          secure_url:
                            type: string
                      _id:
                        type: string
                      createdAt:
                        type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /login:
    post:
      tags:
        - User Management
      summary: login. Also adds httpOnly cookie in browser with token response.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      photo:
                        type: object
                        properties:
                          id:
                            type: string
                          secure_url:
                            type: string
                      _id:
                        type: string
                      createdAt:
                        type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /logout:
    get:
      tags:
        - User Management
      summary: Logout the user. Also removes httpOnly cookies 
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /forgotPassword:
    post:
      tags:
        - User Management
      summary: sends an email with link containing the token to reset the user password. FYI - I do have my own smtp server or service subscription, so you won't actually receive an email from this end-point.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
      responses:
        200:
          description: success If your email exist, you will receive the email
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /password/reset/{token}:
    post:
      tags:
        - User Management
      summary: Allows user to reset password, validated based on token.
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - password
                - confirmPassword
              properties:
                password:
                  type: string
                confirmPassword:
                  type: string
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      photo:
                        type: object
                        properties:
                          id:
                            type: string
                          secure_url:
                            type: string
                      _id:
                        type: string
                      createdAt:
                        type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /userDashboard:
    get:
      tags:
        - User Management
      summary: Gets all details about logged in user.
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      photo:
                        type: object
                        properties:
                          id:
                            type: string
                          secure_url:
                            type: string
                      _id:
                        type: string
                      createdAt:
                        type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /password/update:
    post:
      tags:
        - User Management
      summary: Logged in user can reset thier password.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPassword
                - password
                - confirmPassword
              properties:
                currentPassword:
                  type: string
                password:
                  type: string
                confirmPassword:
                  type: string
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      photo:
                        type: object
                        properties:
                          id:
                            type: string
                          secure_url:
                            type: string
                      _id:
                        type: string
                      createdAt:
                        type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /userDashboard/update:
    post:
      tags:
        - User Management
      summary: User can update the name, emails or photo. 
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                photo:
                  in: formData
                  description: The uploaded file data
                  type: file
                  format: binary
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      photo:
                        type: object
                        properties:
                          id:
                            type: string
                          secure_url:
                            type: string
                      _id:
                        type: string
                      createdAt:
                        type: string
                  
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /admin/users:
    get:
      tags:
        - User Management
      summary: If user is admin, get array of all users
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  users:
                    type: array    
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        email:
                          type: string
                        role:
                          type: string
                        photo:
                          type: object
                          properties:
                            id:
                              type: string
                            secure_url:
                              type: string
                        _id:
                          type: string
                        createdAt:
                          type: string
                  
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /admin/user/{id}:
    get:
      tags:
        - User Management
      summary: If user is admin, response will get details of one user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    success:
                      type: string
                    user:
                      type: object
                      properties:
                        name:
                          type: string
                        email:
                          type: string
                        role:
                          type: string
                        photo:
                          type: object
                          properties:
                            id:
                              type: string
                            secure_url:
                              type: string
                        _id:
                          type: string
                        createdAt:
                          type: string
                  
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error
    put:
      tags:
        - User Management
      summary: If user is admin, he can update mentioned fields in user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody: 
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                role:
                  type: string
                  enum: [user, admin, manager]

      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
                    user:
                      type: object
                      properties:
                        name:
                          type: string
                        email:
                          type: string
                        role:
                          type: string
                        photo:
                          type: object
                          properties:
                            id:
                              type: string
                            secure_url:
                              type: string
                        _id:
                          type: string
                        createdAt:
                          type: string
                  
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error
    delete:
      tags:
        - User Management
      summary: If user is admin, delete the user with given id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string

      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
                  
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /manager/users:
    get:
      tags:
        - User Management
      summary: If manager, response will get array of all users whose role is user
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  users:
                    type: array    
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        email:
                          type: string
                        role:
                          type: string
                        photo:
                          type: object
                          properties:
                            id:
                              type: string
                            secure_url:
                              type: string
                        _id:
                          type: string
                        createdAt:
                          type: string
                  
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error


# routes/product.js
  /products:
    get:
      tags:
        - Product Management
      summary: A simple get request will give you all available products
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  filteredProductCount:
                    type: number
                  totalcountProduct:
                    type: number
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        price: 
                          type: number
                        description: 
                          type: string
                        category: 
                          type: string
                        brand: 
                          type: string
                        stock:
                          type: number
                        ratings: 
                          type: number
                        numberOfReviews: 
                          type: number
                        user: 
                          type: string
                        createdAt:
                          type: string
                        photos: 
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              secure_url:
                                type: string
                              _id:
                                type: string
                        reviews: 
                          type: array
                          items:
                            type: object
                            properties:
                              _id:
                                type: string
                              comment:
                                type: string
                              user:
                                type: string
                              name:
                                type: string
                              rating:
                                type: number
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /product/{id}:
    get:
      tags:
        - Product Management
      summary: Get a single product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  product:
                    type: object
                    properties:
                      _id:
                        type: string
                      name:
                        type: string
                      price: 
                        type: number
                      description: 
                        type: string
                      category: 
                        type: string
                      brand: 
                        type: string
                      stock:
                        type: number
                      ratings: 
                        type: number
                      numberOfReviews: 
                        type: number
                      user: 
                        type: string
                      createdAt:
                        type: string
                      photos: 
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            secure_url:
                              type: string
                            _id:
                              type: string
                      reviews: 
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            comment:
                              type: string
                            user:
                              type: string
                            name:
                              type: string
                            rating:
                              type: number
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /admin/products:
    get:
      tags:
        - Product Management
      summary: If user is admin, get all products
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        price: 
                          type: number
                        description: 
                          type: string
                        category: 
                          type: string
                        brand: 
                          type: string
                        stock:
                          type: number
                        ratings: 
                          type: number
                        numberOfReviews: 
                          type: number
                        user: 
                          type: string
                        createdAt:
                          type: string
                        photos: 
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              secure_url:
                                type: string
                              _id:
                                type: string
                        reviews: 
                          type: array
                          items:
                            type: object
                            properties:
                              _id:
                                type: string
                              comment:
                                type: string
                              user:
                                type: string
                              name:
                                type: string
                              rating:
                                type: number
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /admin/product/add:
    post:
      tags:
        - Product Management
      summary: If admin, Add a new product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - price
                - description
                - category
                - stock
                - brand
                - photos
              properties:
                name:
                  type: string
                  required: true
                price:
                  type: number
                  required: true
                description:
                  type: string
                  required: true
                category:
                  type: string
                  required: true
                  enum: [shortsleeves, longsleeves, sweatshirt, hoodies]
                stock:
                  type: number
                  required: true
                brand:
                  type: string
                  required: true
                photos:
                  in: formData
                  description: Upload photos
                  type: array
                  items:
                    type: file
                    format: binary
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  product:
                    type: object
                    properties:
                      _id:
                        type: string
                      name:
                        type: string
                      price: 
                        type: number
                      description: 
                        type: string
                      category: 
                        type: string
                      brand: 
                        type: string
                      stock:
                        type: number
                      ratings: 
                        type: number
                      numberOfReviews: 
                        type: number
                      user: 
                        type: string
                      createdAt:
                        type: string
                      photos: 
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            secure_url:
                              type: string
                            _id:
                              type: string
                      reviews: 
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            comment:
                              type: string
                            user:
                              type: string
                            name:
                              type: string
                            rating:
                              type: number
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error
  
  /admin/product/{id}:
    put:
      tags:
        - Product Management
      summary: If admin, update the exist product details.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                description:
                  type: number
                category:
                  type: string
                  enum: [shortsleeves, longsleeves, sweatshirt, hoodies]
                stock:
                  type: number
                brand:
                  type: string
                photos:
                  in: formData
                  description: Upload photos
                  type: array
                  items:
                    type: file
                    format: binary
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  product:
                    type: object
                    properties:
                      _id:
                        type: string
                      name:
                        type: string
                      price: 
                        type: number
                      description: 
                        type: string
                      category: 
                        type: string
                      brand: 
                        type: string
                      stock:
                        type: number
                      ratings: 
                        type: number
                      numberOfReviews: 
                        type: number
                      user: 
                        type: string
                      createdAt:
                        type: string
                      photos: 
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            secure_url:
                              type: string
                            _id:
                              type: string
                      reviews: 
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            comment:
                              type: string
                            user:
                              type: string
                            name:
                              type: string
                            rating:
                              type: number
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error
    delete:
      tags:
        - Product Management
      summary: If admin, pass the id of product and product will be removed
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
                
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /product/reviews:
      get:
        tags:
          - Product Management
        summary: A simple get request will give you all reviews for given products
        parameters:
        - name: productID
          in: query
          description: id of the product
          required: true
          schema:
            type: string
          
        responses:
          200:
            description: All good success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    Overall_Ratings:
                      type: number
                    Total_number_of_reviews:
                      type: number
                    reviews:
                      type: array
                      items:
                        type: object
                        properties:
                          user:
                            type: string
                          name:
                            type: string
                          rating: 
                            type: number
                          comment: 
                            type: string
                          _id: 
                            type: string
                          
          400:
            description: Bad request
            content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
          500:
            description: internal server error
  
      put:
        tags:
          - Product Management
        summary: A logged in user can post a review on any product. If review is already posted, it will just update the existing review
        
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - rating
                  - comment
                  - productID
                properties:
                  rating:
                    type: number
                    required: true
                  comment:
                    type: string
                    required: true
                  productID:
                    type: string
                    required: true
        responses:
          200:
            description: All good success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    message:
                      type: object
                      properties:
                        user:
                          type: string
                        name:
                          type: string
                        rating: 
                          type: number
                        comment: 
                          type: string
                          
          400:
            description: Bad request
            content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
          500:
            description: internal server error

      delete:
        tags:
          - Product Management
        summary: Delete the review of logged in user on given product id.
        parameters:
        - name: productID
          in: query
          required: true
          schema:
            type: string
        
        responses:
          200:
            description: All good success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
                          
          400:
            description: Bad request
            content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
          500:
            description: internal server error


# order routes
  /order/create:
    post:
      tags:
        - Order Management
      summary: create a new order with given details
      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - shippingInfo
                - paymentInfo
                - taxAmount
                - shippingAmount
                - totalAmount
                - orderItems
              properties:
                shippingInfo:
                  type: object
                  properties:
                    address:
                      type: string
                    city: 
                      type: string
                    phoneNo: 
                      type: string
                    postalCode: 
                      type: number
                    state: 
                      type: string
                    country: 
                      type: string
                paymentInfo:
                  type: object
                  properties:
                    id:
                      type: string
                taxAmount:
                  type: number
                shippingAmount:
                  type: number
                totalAmount:
                  type: number
                orderItems:
                  type: array
                  items:
                    type: object
                    properties:
                      quantity:
                        type: number
                      product:
                        type: string
                        description: id of product
                  
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  orderID:
                    type: string
                  message:
                    type: string
                  order:
                    type: object
                    properties:
                      _id:
                        type: string
                      user:
                        type: string
                      orderStatus:
                        type: string
                      createdAt:
                        type: string
                      shippingInfo:
                        type: object
                        properties:
                          address:
                            type: string
                          city: 
                            type: string
                          phoneNo: 
                            type: string
                          postalCode: 
                            type: number
                          state: 
                            type: string
                          country: 
                            type: string
                      paymentInfo:
                        type: object
                        properties:
                          id:
                            type: string
                      taxAmount:
                        type: number
                      shippingAmount:
                        type: number
                      totalAmount:
                        type: number
                      orderItems:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            quantity:
                              type: number
                            price:
                              type: number
                            product:
                              type: string
                            _id:
                              type: string
                        
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /order/{id}:
    get:
      tags:
        - Order Management
      summary: get details about a order with order id - admin or manager can also view if logged in
      parameters:
        - name: id
          in: path
          required: true
          description: id of the order
          schema:
            type: string
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  order:
                    type: object
                    properties:
                      _id:
                        type: string
                      user:
                        type: string
                      orderStatus:
                        type: string
                      createdAt:
                        type: string
                      shippingInfo:
                        type: object
                        properties:
                          address:
                            type: string
                          city: 
                            type: string
                          phoneNo: 
                            type: string
                          postalCode: 
                            type: number
                          state: 
                            type: string
                          country: 
                            type: string
                      paymentInfo:
                        type: object
                        properties:
                          id:
                            type: string
                      taxAmount:
                        type: number
                      shippingAmount:
                        type: number
                      totalAmount:
                        type: number
                      orderItems:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            quantity:
                              type: number
                            price:
                              type: number
                            product:
                              type: string
                            _id:
                              type: string
                        
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /myOrders:
    get:
      tags:
        - Order Management
      summary: get order of logged in user
      requestBody:
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  total_orders: 
                    type: number
                  order:
                    type: object
                    properties:
                      _id:
                        type: string
                      user:
                        type: string
                      orderStatus:
                        type: string
                      createdAt:
                        type: string
                      shippingInfo:
                        type: object
                        properties:
                          address:
                            type: string
                          city: 
                            type: string
                          phoneNo: 
                            type: string
                          postalCode: 
                            type: number
                          state: 
                            type: string
                          country: 
                            type: string
                      paymentInfo:
                        type: object
                        properties:
                          id:
                            type: string
                      taxAmount:
                        type: number
                      shippingAmount:
                        type: number
                      totalAmount:
                        type: number
                      orderItems:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            quantity:
                              type: number
                            price:
                              type: number
                            product:
                              type: string
                            _id:
                              type: string
                        
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /admin/allOrders:
    get:
      tags:
        - Order Management
      summary: if admin, get list of all orders
      requestBody:
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  total_orders: 
                    type: number
                  orders:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        user:
                          type: string
                        orderStatus:
                          type: string
                        createdAt:
                          type: string
                        shippingInfo:
                          type: object
                          properties:
                            address:
                              type: string
                            city: 
                              type: string
                            phoneNo: 
                              type: string
                            postalCode: 
                              type: number
                            state: 
                              type: string
                            country: 
                              type: string
                        paymentInfo:
                          type: object
                          properties:
                            id:
                              type: string
                        taxAmount:
                          type: number
                        shippingAmount:
                          type: number
                        totalAmount:
                          type: number
                        orderItems:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              quantity:
                                type: number
                              price:
                                type: number
                              product:
                                type: string
                              _id:
                                type: string
                        
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /admin/updateOrder/{id}:
    put:
      tags:
        - Order Management
      summary: if admin, update the status of the order
      parameters:
        - name: id
          in: path
          required: true
          description: id of the order
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - orderStatus
              properties:
                orderStatus:
                  type: string
                  enum: [processing, dispatched, shipped, delivered]
                  required: true
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  order:
                    type: object
                    properties:
                      _id:
                        type: string
                      user:
                        type: string
                      orderStatus:
                        type: string
                      createdAt:
                        type: string
                      shippingInfo:
                        type: object
                        properties:
                          address:
                            type: string
                          city: 
                            type: string
                          phoneNo: 
                            type: string
                          postalCode: 
                            type: number
                          state: 
                            type: string
                          country: 
                            type: string
                      paymentInfo:
                        type: object
                        properties:
                          id:
                            type: string
                      taxAmount:
                        type: number
                      shippingAmount:
                        type: number
                      totalAmount:
                        type: number
                      orderItems:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            quantity:
                              type: number
                            price:
                              type: number
                            product:
                              type: string
                            _id:
                              type: string
                        
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error
    
  /admin/deleteOrder/{id}:
    delete:
      tags:
        - Order Management
      summary: if admin, delete an order with given id
      parameters:
        - name: id
          in: path
          required: true
          description: id of the order
          schema:
            type: string
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
          
        500:
          description: internal server error

# Payment routes
  /stripekey:
    get:
      tags:
        - Payment Management
      summary: gets you the public stripe key
      requestBody:
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  stripekey:
                    type: string
                                 
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /razorpaykey:
    get:
      tags:
        - Payment Management
      summary: gets you the public razorpay key
      requestBody:
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  razorpaykey:
                    type: string
                                 
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error

  /acceptStripePayment:
    post:
      tags:
        - Payment Management
      summary: Stripe - Request from swagger UI are not proper as to capture payment we need to send dummy card details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
    
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  amount:
                    type: number
                  client_secret:
                    type: string
                                 
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
          
        500:
          description: internal server error

  /acceptRazorpayPayment:
    post:
      tags:
        - Payment Management
      summary: Stripe - Request from swagger UI are not proper as to capture payment we need to send dummy card details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
        
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  myOrder:
                    type: object
                    properties:
                      id:
                        type: string
                      amount:
                        type: number
                      currency:
                        type: string
                                 
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        500:
          description: internal server error
